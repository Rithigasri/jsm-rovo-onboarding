modules:
  rovo:agent:
    - key: emp-hello-world-agent
      name: Employee Management
      description: An agent for testing user logging and employee adding.
      prompt: >
        You are a helpful agent. You can log usernames or add employees.
        - If a user asks to "add an employee", extract the `userId` and `username`, and call `add-employee`.
        - If a user asks to "assign an asset", extract the `objectKey` and `employeeId`, and call `assign-asset`.
        - If a user asks to "deallocate an asset", extract the `objectKey`, and call `deallocate-asset`.
        - Sync asset attributes to Confluence by calling `sync-attributes-to-confluence`. No input is required.
        - If a user asks to "delete an employee", extract the `emp_id`, and call `delete-employee`.
        If required information is missing, ask the user to provide it.
      conversationStarters:
        - Add a new employee
        - Assign an asset to an employee
        - Deallocate an asset
        - Sync asset attributes to Confluence
        - Delete an employee

      actions:
        - add-employee
        - assign-asset
        - deallocate-asset
        - sync-attributes-to-confluence
        - delete-employee

  action:
    - key: add-employee
      name: Add Employee
      function: addEmployee
      actionVerb: GET
      description: >
        Logs an employee to Forge logs in format: userId,username.
        Validates if the employee already exists using AQL before adding.
      inputs:
        userId:
          title: User ID
          type: string
          required: true
          description: ID of the employee
        username:
          title: Username
          type: string
          required: true
          description: Name of the employee
    - key: assign-asset
      name: Assign Asset
      function: assignAsset
      actionVerb: GET
      description: >
        Logs the asset assignment in format: objectKey,employeeId
      inputs:
        objectKey:
          title: Object Key
          type: string
          required: true
          description: Key of the asset to be assigned
        employeeId:
          title: Employee ID
          type: string
          required: true
          description: ID of the employee to whom the asset is assigned
    - key: sync-attributes-to-confluence
      name: Sync Attributes to Confluence
      function: syncToConfluence
      actionVerb: GET
      description: >
        Fetches assets from Insight and syncs their attributes to a Confluence page.
    - key: delete-employee
      name: Delete Employee
      function: deleteEmployee
      actionVerb: GET
      description: >
        Deletes an employee from the database and removes their object from the system.
      inputs:
        emp_id:
          title: Employee ID
          type: string
          required: true
          description: The ID of the employee to delete.
    - key: deallocate-asset
      name: Deallocate Asset
      function: deallocateAsset
      actionVerb: GET
      description: >
        Removes the owner of an asset by clearing the "Owner" attribute value.
      inputs:
        objectKey:
          title: Object Key
          type: string
          required: true
          description: Key of the asset to be deallocated.

  function:
    - key: addEmployee
      handler: index.addEmployee
    - key: syncToConfluence
      handler: index.syncToConfluence
    - key: assignAsset
      handler: index.assignAsset
    - key: deleteEmployee
      handler: index.deleteEmployee
    - key: deallocateAsset
      handler: index.deallocateAsset

permissions:
  scopes:
    - 'read:confluence-content.summary'
    - 'write:page:confluence'
    - 'write:confluence-content'
    - 'read:confluence-content.all'
    - 'read:confluence-space.summary'
    - 'write:page:confluence'
    - 'read:jira-work'
    - 'read:page:confluence'
  external:
    fetch:
      backend:
        - 'https://api.atlassian.com'
        - 'https://one-atlas-onki.atlassian.net'

app:
  runtime:
    name: nodejs22.x
  id: ari:cloud:ecosystem::app/1db9aa00-d62d-4055-b94c-9cc33a39a25c